Origin: upstream, https://gitlab.linphone.org/BC/public/bctoolbox/-/commit/9ac0e412c45bf28d02829e9d912342359714f638
Bug-Debian: https://bugs.debian.org/983985
Last-Update: 2022-01-22

From 9ac0e412c45bf28d02829e9d912342359714f638 Mon Sep 17 00:00:00 2001
From: Sylvain Berfini <sylvain.berfini@belledonne-communications.com>
Date: Wed, 28 Apr 2021 14:11:30 +0200
Subject: [PATCH] Fixed desktop build with gcc 11

---
 include/bctoolbox/port.h |  2 +-
 src/crypto/mbedtls.c     | 18 +++++++++---------
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/include/bctoolbox/port.h b/include/bctoolbox/port.h
index 5bdbfde..3543172 100644
--- a/include/bctoolbox/port.h
+++ b/include/bctoolbox/port.h
@@ -751,7 +751,7 @@ BCTBX_PUBLIC void bctbx_uint32_to_str(uint8_t output_string[9], uint32_t input_u
  *
  * Note : there is no check on the length or validity as an hexa string on the input, incorrect byte is silently mapped to 0
  */
-BCTBX_PUBLIC uint32_t bctbx_str_to_uint32(const uint8_t input_string[9]);
+BCTBX_PUBLIC uint32_t bctbx_str_to_uint32(const uint8_t *input_string);
 
 /**
  * @brief Convert an unsigned 64 bits integer into the corresponding hexadecimal string(including null termination character)
diff --git a/src/crypto/mbedtls.c b/src/crypto/mbedtls.c
index 1e7c205..10155a6 100644
--- a/src/crypto/mbedtls.c
+++ b/src/crypto/mbedtls.c
@@ -1538,7 +1538,7 @@ void bctbx_sha384(const uint8_t *input,
 		uint8_t hashLength,
 		uint8_t *output)
 {
-	uint8_t hashOutput[48];
+	uint8_t hashOutput[64];
 	mbedtls_sha512(input, inputLength, hashOutput, 1); /* last param to one to select SHA384 and not SHA512 */
 
 	/* check output length, can't be>48 */
@@ -1791,8 +1791,8 @@ int32_t bctbx_aes_gcm_finish(bctbx_aes_gcm_context_t *context,
  * @param[out]	output		Output data buffer
  *
  */
-void bctbx_aes128CfbEncrypt(const uint8_t key[16],
-		const uint8_t IV[16],
+void bctbx_aes128CfbEncrypt(const uint8_t *key,
+		const uint8_t *IV,
 		const uint8_t *input,
 		size_t inputLength,
 		uint8_t *output)
@@ -1823,8 +1823,8 @@ void bctbx_aes128CfbEncrypt(const uint8_t key[16],
  * @param[out]	output		Output data buffer
  *
  */
-void bctbx_aes128CfbDecrypt(const uint8_t key[16],
-		const uint8_t IV[16],
+void bctbx_aes128CfbDecrypt(const uint8_t *key,
+		const uint8_t *IV,
 		const uint8_t *input,
 		size_t inputLength,
 		uint8_t *output)
@@ -1855,8 +1855,8 @@ void bctbx_aes128CfbDecrypt(const uint8_t key[16],
  * @param[out]	output		Output data buffer
  *
  */
-void bctbx_aes256CfbEncrypt(const uint8_t key[32],
-		const uint8_t IV[16],
+void bctbx_aes256CfbEncrypt(const uint8_t *key,
+		const uint8_t *IV,
 		const uint8_t *input,
 		size_t inputLength,
 		uint8_t *output)
@@ -1884,8 +1884,8 @@ void bctbx_aes256CfbEncrypt(const uint8_t key[32],
  * @param[out]	output		Output data buffer
  *
  */
-void bctbx_aes256CfbDecrypt(const uint8_t key[32],
-		const uint8_t IV[16],
+void bctbx_aes256CfbDecrypt(const uint8_t *key,
+		const uint8_t *IV,
 		const uint8_t *input,
 		size_t inputLength,
 		uint8_t *output)
-- 
GitLab

